// <auto-generated />
using System;
using MaximoFarm.Register.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MaximoFarm.Register.Api.Migrations
{
    [DbContext(typeof(RegisterContext))]
    partial class RegisterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.CadEstoque", b =>
                {
                    b.Property<int>("CodCadEstoque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_ESTOQUE")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CadEstoqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_CAD_ESTOQUE")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DescCadEstoque")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DE_ESTOQUE");

                    b.HasKey("CodCadEstoque")
                        .HasName("PK_CAD_ESTOQUE");

                    b.ToTable("CAD_ESTOQUE");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Cargos", b =>
                {
                    b.Property<int>("CodCargo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_CARGO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_CARGO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DescCargo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DE_CARGO");

                    b.HasKey("CodCargo")
                        .HasName("PK_CARGO");

                    b.ToTable("CARGOS");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.CentroCusto", b =>
                {
                    b.Property<int>("CodCentroCusto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_CCUSTO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("BOOLEAN")
                        .HasColumnName("ATIVO");

                    b.Property<int>("CentroCustoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_CCUSTO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DescCentroCusto")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DE_CCUSTO");

                    b.HasKey("CodCentroCusto")
                        .HasName("PK_CCUSTO");

                    b.ToTable("CENTRO_CUSTO");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.CentroReceita", b =>
                {
                    b.Property<int>("CodCentroReceita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_CRECEITA")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("BOOLEAN")
                        .HasColumnName("ATIVO");

                    b.Property<int>("CentroReceitaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_CRECEITA")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DescCentroReceita")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DE_CRECEITA");

                    b.HasKey("CodCentroReceita")
                        .HasName("PK_CENTRO_RECEITA");

                    b.ToTable("CENTRO_RECEITA");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Ciclo", b =>
                {
                    b.Property<int>("CodCiclo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_CICLO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int>("CicloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_CICLO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DescCiclo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DE_CICLO");

                    b.HasKey("CodCiclo")
                        .HasName("PK_CICLO");

                    b.ToTable("CICLO");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Cidades", b =>
                {
                    b.Property<int>("CodCidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_CIDADE")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CidadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_CIDADE")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CodEstado")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_ESTADO");

                    b.Property<string>("DescCidade")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DE_CIDADE");

                    b.HasKey("CodCidade")
                        .HasName("PK_CIDADE");

                    b.HasIndex("CodEstado");

                    b.ToTable("CIDADES");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.ClasseManutencao", b =>
                {
                    b.Property<int>("CodClasseManutencao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_CLASS_MANU")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ClasseManutencaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_CLASS_MANU")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DescClasseManutencao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DE_CLASS_MANU");

                    b.HasKey("CodClasseManutencao")
                        .HasName("PK_CLASS_MANU");

                    b.ToTable("CLASS_MANU");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.ContaDebito", b =>
                {
                    b.Property<int>("CodContaDebito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_CDEBITO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("BOOLEAN")
                        .HasColumnName("ATIVO");

                    b.Property<int>("ContaDebitoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_CDEBITO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DescContaDebito")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DE_CDEBITO");

                    b.HasKey("CodContaDebito")
                        .HasName("PK_CDEBITO");

                    b.ToTable("CDEBITO");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.ContaReceita", b =>
                {
                    b.Property<int>("CodContaReceita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_CRECEITA")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("BOOLEAN")
                        .HasColumnName("ATIVO");

                    b.Property<int>("ContaReceitaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_CRECEITA")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DescContaReceita")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DE_CRECEITA");

                    b.HasKey("CodContaReceita")
                        .HasName("PK_CONTA_RECEITA");

                    b.ToTable("CRECEITA");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Enderecos", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_ENDERECO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("BAIRRO");

                    b.Property<int>("CodCidade")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_CIDADE");

                    b.Property<string>("Complemento")
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("EMAIL");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric(5,5)")
                        .HasColumnName("LATITUDE");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric(5,5)")
                        .HasColumnName("LONGITUDE");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER")
                        .HasColumnName("NUMERO");

                    b.Property<string>("Rua")
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("RUA");

                    b.Property<int>("Telefone")
                        .HasColumnType("INTEGER")
                        .HasColumnName("TELEFONE");

                    b.Property<int>("TelefoneAux")
                        .HasColumnType("INTEGER")
                        .HasColumnName("TELEFONE_AUX");

                    b.HasKey("EnderecoId")
                        .HasName("PK_ENDERECO");

                    b.HasIndex("CodCidade");

                    b.ToTable("ENDERECOS");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Equipamentos", b =>
                {
                    b.Property<int>("CodEquipamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_EQUIPTO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AnoFabricacao")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ANO_FABR");

                    b.Property<bool>("Ativo")
                        .HasColumnType("BOOLEAN")
                        .HasColumnName("ATIVO");

                    b.Property<string>("Chassi")
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("CHASSI");

                    b.Property<int>("CodCentroCusto")
                        .HasColumnType("INT")
                        .HasColumnName("CD_CCUSTO");

                    b.Property<int>("CodFornecedor")
                        .HasColumnType("INT")
                        .HasColumnName("CD_FORNEC");

                    b.Property<int>("CodGrupoEquipamento")
                        .HasColumnType("INT")
                        .HasColumnName("CD_GRUPO_EQUIPTO");

                    b.Property<int>("CodModelo")
                        .HasColumnType("INT")
                        .HasColumnName("CD_MODELO");

                    b.Property<int>("CodTipoEquipamento")
                        .HasColumnType("INT")
                        .HasColumnName("CD_TIPO_EQUIPTO");

                    b.Property<DateTime>("DataAquisicao")
                        .HasColumnType("DATE")
                        .HasColumnName("DT_AQUISICAO");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("DT_CADASTRO");

                    b.Property<string>("Placa")
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("PLACA");

                    b.Property<string>("Renavan")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("RENAVAN");

                    b.HasKey("CodEquipamento")
                        .HasName("PK_EQUIPTO");

                    b.HasIndex("CodCentroCusto");

                    b.HasIndex("CodFornecedor");

                    b.HasIndex("CodGrupoEquipamento");

                    b.HasIndex("CodModelo");

                    b.HasIndex("CodTipoEquipamento");

                    b.ToTable("EQUIPTOS");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Espacamento", b =>
                {
                    b.Property<int>("CodEspacamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_ESPACAMENTO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DescEspacamento")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DE_ESPACAMENTO");

                    b.Property<int>("EspacamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_ESPACAMENTO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("CodEspacamento")
                        .HasName("PK_ESPACAMENTO");

                    b.ToTable("ESPACAMENTOS");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Estados", b =>
                {
                    b.Property<int>("CodEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_ESTADO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DescAbrevEstado")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DA_ESTADO");

                    b.Property<string>("DescEstado")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DE_ESTADO");

                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_ESTADO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("CodEstado")
                        .HasName("PK_ESTADO");

                    b.ToTable("ESTADOS");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Fornecedores", b =>
                {
                    b.Property<int>("CodFornecedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_FORNEC")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DescFornecedor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DE_FORNEC");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_ENDERECO");

                    b.Property<int>("FornecedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_FORNEC")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("TipoPessoa")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("TP_PESSOA");

                    b.HasKey("CodFornecedor")
                        .HasName("ID_FORNEC");

                    b.HasIndex("EnderecoId");

                    b.ToTable("FORNECEDORES");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.GrupoEquipamento", b =>
                {
                    b.Property<int>("CodGrupoEquipamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_GRUPO_EQUIPTO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("BOOLEAN")
                        .HasColumnName("ATIVO");

                    b.Property<string>("DescGrupoEquipamento")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DE_GRUPO_EQUIPTO");

                    b.Property<int>("GrupoEquipamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_GRUPO_EQUIPTO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("CodGrupoEquipamento")
                        .HasName("PK_GRUPO_EQUIPTO");

                    b.ToTable("GRUPO_EQUIPTO");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.GrupoProduto", b =>
                {
                    b.Property<int>("CodGrupoProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_GRUPO_PROD")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("BOOLEAN")
                        .HasColumnName("ATIVO");

                    b.Property<string>("DescGrupoProduto")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DE_GRUPO_PROD");

                    b.Property<int>("GrupoProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_GRUPO_PROD")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("CodGrupoProduto")
                        .HasName("PK_GRUPO_PROD");

                    b.ToTable("GRUPO_PRODUTO");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Insumos", b =>
                {
                    b.Property<int>("CodInsumo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_INSUMOS")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CodFornecedor")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_FORNEC");

                    b.Property<int>("CodGrupoProduto")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_GRUPO_PRODUTO");

                    b.Property<int>("CodMarca")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_MARCA");

                    b.Property<int>("CodMedida")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_MEDIDA");

                    b.Property<string>("DescInsumo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DE_INSUMOS");

                    b.Property<int>("InsumoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_INSUMOS")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("CodInsumo")
                        .HasName("PK_INSUMOS");

                    b.HasIndex("CodFornecedor");

                    b.HasIndex("CodGrupoProduto");

                    b.HasIndex("CodMarca");

                    b.HasIndex("CodMedida");

                    b.ToTable("INSUMOS");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Marcas", b =>
                {
                    b.Property<int>("CodMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_MARCA")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DescMarca")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DE_MARCA");

                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_MARCA")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("CodMarca")
                        .HasName("PK_MARCA");

                    b.ToTable("MARCAS");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Materiais", b =>
                {
                    b.Property<int>("CodMaterial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_MATERIAL")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CodEspacamento")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_ESPACAMENTO");

                    b.Property<int>("CodGrupoProduto")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_GRUPO_PROD");

                    b.Property<int>("CodMedida")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_MEDIDA");

                    b.Property<string>("DescMaterial")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DE_MATERIAL");

                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_MATERIAL")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("CodMaterial")
                        .HasName("ID_MATERIAL");

                    b.HasIndex("CodEspacamento");

                    b.HasIndex("CodGrupoProduto");

                    b.HasIndex("CodMedida");

                    b.ToTable("MATERIAIS");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Medidas", b =>
                {
                    b.Property<int>("CodMedida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_MEDIDA")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DescAbrevMedida")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("DA_MEDIDA");

                    b.Property<string>("DescMedida")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("DE_MEDIDA");

                    b.Property<int>("MedidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_MEDIDA")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("CodMedida")
                        .HasName("PK_MEDIDA");

                    b.ToTable("MEDIDAS");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Modelos", b =>
                {
                    b.Property<int>("CodModelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_MODELO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CodMarca")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_MARCA");

                    b.Property<int>("CodMedida")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_MEDIDA");

                    b.Property<string>("DescModelo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("DE_MODELO");

                    b.Property<int>("ModeloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_MODELO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("CodModelo")
                        .HasName("ID_MODELO");

                    b.HasIndex("CodMarca");

                    b.HasIndex("CodMedida");

                    b.ToTable("MODELOS");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Operacao", b =>
                {
                    b.Property<int>("CodOperacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_OPERACAO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DescAbrevOperacao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("DA_OPERACAO");

                    b.Property<string>("DescOperacao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("DE_OPERACAO");

                    b.Property<int>("OperacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_OPERACAO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("CodOperacao")
                        .HasName("PK_OPERACAO");

                    b.ToTable("OPERACOES");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.PontoAbastecimento", b =>
                {
                    b.Property<int>("CodPontoAbastecimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_PONTO_ABAST")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DescPontoAbastecimento")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DE_PONTO_ABAST");

                    b.Property<int>("PontoAbastecimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_PONTO_ABAST")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("CodPontoAbastecimento")
                        .HasName("PK_PONTO_ABAST");

                    b.ToTable("PONTO_ABAST");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Propriedade", b =>
                {
                    b.Property<int>("CodPropriedade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_PROPRIEDADE")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Cadpro")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("NO_CADPRO");

                    b.Property<string>("Ccir")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("NO_CCIR");

                    b.Property<int>("CodCidade")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_CIDADE");

                    b.Property<int>("CodFornecedor")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_FORNEC");

                    b.Property<string>("DescPropriedade")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("DE_PROPRIEDADE");

                    b.Property<string>("Incra")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("NO_INCRA");

                    b.Property<decimal>("QuantidadeAreaTotal")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("QT_AREA_TOT");

                    b.HasKey("CodPropriedade")
                        .HasName("ID_PROPRIEDADE");

                    b.HasIndex("CodCidade");

                    b.HasIndex("CodFornecedor");

                    b.ToTable("PROPRIEDADE_HE");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.PropriedadeItem", b =>
                {
                    b.Property<int>("CodPropriedade")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_PROPRIEDADE");

                    b.Property<decimal>("AreaDano")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("QT_AREA_DANO");

                    b.Property<decimal>("AreaProdutiva")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("QT_AREA_PROD");

                    b.Property<decimal>("AreaTotal")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("QT_AREA_TOT");

                    b.Property<int>("CodTalhao")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_TALHAO");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric(5,5)")
                        .HasColumnName("LATITUDE");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric(5,5)")
                        .HasColumnName("LONGITUDE");

                    b.HasKey("CodPropriedade")
                        .HasName("PK_PROPRIEDADE");

                    b.ToTable("PROPRIEDADE_DE");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Safra", b =>
                {
                    b.Property<int>("CodSafra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_SAFRA")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DescSafra")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DE_SAFRA");

                    b.Property<int>("SafraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_SAFRA")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("CodSafra")
                        .HasName("PK_SAFRA");

                    b.ToTable("SAFRA");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.TipoEquipamento", b =>
                {
                    b.Property<int>("CodTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_TP_EQUIPTO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DescTipo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)")
                        .HasColumnName("DE_TP_EQUIPTO");

                    b.Property<int>("TipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_TP_EQUIPTO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("CodTipo")
                        .HasName("PK_TP_EQUIPTO");

                    b.ToTable("TIPO_EQUIPTO");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Variedades", b =>
                {
                    b.Property<int>("CodVariedade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_VARIEDADE")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CodCiclo")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_CICLO");

                    b.Property<int>("CodEspacamento")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_ESPACAMENTO");

                    b.Property<int>("CodFornecedor")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_FORNEC");

                    b.Property<int>("CodMedida")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CD_MEDIDA");

                    b.Property<string>("DescAbrevVariedade")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("DA_VARIEDADE");

                    b.Property<string>("DescVariedade")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("DE_VARIEDADE");

                    b.Property<int>("VariedadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID_VARIEDADE");

                    b.HasKey("CodVariedade")
                        .HasName("PK_VARIEDADE");

                    b.HasIndex("CodCiclo");

                    b.HasIndex("CodFornecedor");

                    b.HasIndex("CodMedida");

                    b.HasIndex("VariedadeId");

                    b.ToTable("VARIEDADES");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Cidades", b =>
                {
                    b.HasOne("MaximoFarm.Register.Domain.Entities.Estados", "Estados")
                        .WithMany("Cidades")
                        .HasForeignKey("CodEstado")
                        .HasConstraintName("FK_CIDADES__ESTADOS")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estados");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Enderecos", b =>
                {
                    b.HasOne("MaximoFarm.Register.Domain.Entities.Cidades", "Cidades")
                        .WithMany("Enderecos")
                        .HasForeignKey("CodCidade")
                        .HasConstraintName("FK_ENDERECO__CIDADE")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cidades");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Equipamentos", b =>
                {
                    b.HasOne("MaximoFarm.Register.Domain.Entities.CentroCusto", "CentroCusto")
                        .WithMany("Equipamentos")
                        .HasForeignKey("CodCentroCusto")
                        .HasConstraintName("FK_EQUIPAMENTO__CCUSTO")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaximoFarm.Register.Domain.Entities.Fornecedores", "Fornecedores")
                        .WithMany("Equipamentos")
                        .HasForeignKey("CodFornecedor")
                        .HasConstraintName("FK_EQUIPAMENTO__FORNECEDORES")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaximoFarm.Register.Domain.Entities.GrupoEquipamento", "GrupoEquipamento")
                        .WithMany("Equipamentos")
                        .HasForeignKey("CodGrupoEquipamento")
                        .HasConstraintName("FK_EQUIPAMENTO__GRUPO_EQUIPTO")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaximoFarm.Register.Domain.Entities.Modelos", "Modelos")
                        .WithMany("Equipamentos")
                        .HasForeignKey("CodModelo")
                        .HasConstraintName("FK_EQUIPAMENTO__MODELOS")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaximoFarm.Register.Domain.Entities.TipoEquipamento", "TipoEquipamento")
                        .WithMany("Equipamentos")
                        .HasForeignKey("CodTipoEquipamento")
                        .HasConstraintName("FK_EQUIPAMENTO__TIPO_EQUIPTO")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CentroCusto");

                    b.Navigation("Fornecedores");

                    b.Navigation("GrupoEquipamento");

                    b.Navigation("Modelos");

                    b.Navigation("TipoEquipamento");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Fornecedores", b =>
                {
                    b.HasOne("MaximoFarm.Register.Domain.Entities.Enderecos", "Enderecos")
                        .WithMany("Fornecedores")
                        .HasForeignKey("EnderecoId")
                        .HasConstraintName("FK_FORNECEDORES__ENDERECOS")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Insumos", b =>
                {
                    b.HasOne("MaximoFarm.Register.Domain.Entities.Fornecedores", "Fornecedores")
                        .WithMany("Insumos")
                        .HasForeignKey("CodFornecedor")
                        .HasConstraintName("FK_INSUMOS__FORNECEDORES")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaximoFarm.Register.Domain.Entities.GrupoProduto", "GrupoProduto")
                        .WithMany("Insumos")
                        .HasForeignKey("CodGrupoProduto")
                        .HasConstraintName("FK_INSUMOS__INSUMOS")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaximoFarm.Register.Domain.Entities.Marcas", "Marcas")
                        .WithMany("Insumos")
                        .HasForeignKey("CodMarca")
                        .HasConstraintName("FK_INSUMOS__MARCAS")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaximoFarm.Register.Domain.Entities.Medidas", "Medidas")
                        .WithMany("Insumos")
                        .HasForeignKey("CodMedida")
                        .HasConstraintName("FK_INSUMOS__MEDIDAS")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Fornecedores");

                    b.Navigation("GrupoProduto");

                    b.Navigation("Marcas");

                    b.Navigation("Medidas");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Materiais", b =>
                {
                    b.HasOne("MaximoFarm.Register.Domain.Entities.Espacamento", "Espacamento")
                        .WithMany("Materiais")
                        .HasForeignKey("CodEspacamento")
                        .HasConstraintName("FK_MATERIAIS__ESPACAMENTO")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaximoFarm.Register.Domain.Entities.GrupoProduto", "GrupoProduto")
                        .WithMany("Materiais")
                        .HasForeignKey("CodGrupoProduto")
                        .HasConstraintName("FK_MATERIAIS__GRUPO_PROD")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaximoFarm.Register.Domain.Entities.Medidas", "Medidas")
                        .WithMany("Materiais")
                        .HasForeignKey("CodMedida")
                        .HasConstraintName("FK_MATERIAIS__MEDIDAS")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Espacamento");

                    b.Navigation("GrupoProduto");

                    b.Navigation("Medidas");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Modelos", b =>
                {
                    b.HasOne("MaximoFarm.Register.Domain.Entities.Marcas", "Marcas")
                        .WithMany("Modelos")
                        .HasForeignKey("CodMarca")
                        .HasConstraintName("FK_MODELOS__MARCAS")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaximoFarm.Register.Domain.Entities.Medidas", "Medidas")
                        .WithMany("Modelos")
                        .HasForeignKey("CodMedida")
                        .HasConstraintName("FK_MODELOS__MEDIDAS")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Marcas");

                    b.Navigation("Medidas");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Propriedade", b =>
                {
                    b.HasOne("MaximoFarm.Register.Domain.Entities.Cidades", "Cidades")
                        .WithMany("Propriedade")
                        .HasForeignKey("CodCidade")
                        .HasConstraintName("FK_PROPRIEDADE__CIDADES")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaximoFarm.Register.Domain.Entities.Fornecedores", "Fornecedores")
                        .WithMany("Propriedades")
                        .HasForeignKey("CodFornecedor")
                        .HasConstraintName("FK_PROPRIEDADE__FORNECEDOR")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cidades");

                    b.Navigation("Fornecedores");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.PropriedadeItem", b =>
                {
                    b.HasOne("MaximoFarm.Register.Domain.Entities.Propriedade", "Propriedade")
                        .WithMany("PropriedadeItem")
                        .HasForeignKey("CodPropriedade")
                        .HasConstraintName("FK_PROPRIEDADE__PROPRIEDADE_ITEM")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Propriedade");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Variedades", b =>
                {
                    b.HasOne("MaximoFarm.Register.Domain.Entities.Ciclo", "Ciclo")
                        .WithMany("Variedades")
                        .HasForeignKey("CodCiclo")
                        .HasConstraintName("FK_VARIEDADES__CICLOS")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaximoFarm.Register.Domain.Entities.Fornecedores", "Fornecedores")
                        .WithMany("Variedades")
                        .HasForeignKey("CodFornecedor")
                        .HasConstraintName("FK_VARIEDADES__FORNECEDORES")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaximoFarm.Register.Domain.Entities.Medidas", "Medidas")
                        .WithMany("Variedades")
                        .HasForeignKey("CodMedida")
                        .HasConstraintName("FK_VARIEDADES__MEDIDAS")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaximoFarm.Register.Domain.Entities.Espacamento", "Espacamento")
                        .WithMany("Variedades")
                        .HasForeignKey("VariedadeId")
                        .HasConstraintName("FK_VARIEDADES__VARIEDADES")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ciclo");

                    b.Navigation("Espacamento");

                    b.Navigation("Fornecedores");

                    b.Navigation("Medidas");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.CentroCusto", b =>
                {
                    b.Navigation("Equipamentos");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Ciclo", b =>
                {
                    b.Navigation("Variedades");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Cidades", b =>
                {
                    b.Navigation("Enderecos");

                    b.Navigation("Propriedade");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Enderecos", b =>
                {
                    b.Navigation("Fornecedores");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Espacamento", b =>
                {
                    b.Navigation("Materiais");

                    b.Navigation("Variedades");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Estados", b =>
                {
                    b.Navigation("Cidades");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Fornecedores", b =>
                {
                    b.Navigation("Equipamentos");

                    b.Navigation("Insumos");

                    b.Navigation("Propriedades");

                    b.Navigation("Variedades");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.GrupoEquipamento", b =>
                {
                    b.Navigation("Equipamentos");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.GrupoProduto", b =>
                {
                    b.Navigation("Insumos");

                    b.Navigation("Materiais");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Marcas", b =>
                {
                    b.Navigation("Insumos");

                    b.Navigation("Modelos");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Medidas", b =>
                {
                    b.Navigation("Insumos");

                    b.Navigation("Materiais");

                    b.Navigation("Modelos");

                    b.Navigation("Variedades");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Modelos", b =>
                {
                    b.Navigation("Equipamentos");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.Propriedade", b =>
                {
                    b.Navigation("PropriedadeItem");
                });

            modelBuilder.Entity("MaximoFarm.Register.Domain.Entities.TipoEquipamento", b =>
                {
                    b.Navigation("Equipamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
